
numbers = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]

first_five = numbers[:5]


print("პირველი ხუთი რიცხვი:", first_five)







numbers = list(range(20, 31))


even_numbers = numbers[0::2]  


print("ლუწი რიცხვები 20-იდან 30-ის ჩათვლით:", even_numbers)







text = "Goal-Oriented Academy"


academy = text[-7:]  

print(academy)




# 1. print()     — ეკრანზე ინფორმაციის გამოსატანად
# 2. len()       — ობიექტის სიგრძის ან ელემენტების რაოდენობის დასადგენად
# 3. range()     — რიცხვების სერიის შესაქმნელად
# 4. list()      — სიაში გარდასაქცევად, მაგ. range-დან list-ის შექმნა




# 1. კოდი უფრო ორგანიზებული და წაკითხვადია.
#    ფუნქციები ანაწილებენ კოდს ნაწილებად, რაც კოდის გაგებას და მართვას ამარტივებს.

# 2. კოდის თავიდან გამოყენება (reuse).
#    ერთი და იგივე ფუნქცია შეიძლება გამოვიყენოთ სხვადასხვა ადგილას, რამდენჯერმე.

# 3. კოდის შეცვლა და გამართვა უფრო მარტივია.
#    შეცვლას ფუნქციის ფარგლებში ახდენ, და ეს ავტომატურად ვრცელდება ყველგან, სადაც ის გამოიყენება.

# 4. ამცირებს კოდის გამეორებას (DRY პრინციპი — Don't Repeat Yourself).
#    ერთნაირი ლოგიკის კოპირება საჭირო არ არის, უბრალოდ ფუნქციად გამოიძახებ.

# 5. ამარტივებს ტესტირებას.
#    შეგიძლია ცალკეული ფუნქცია ცალკე შეამოწმო, დიდი სისტემის ტესტირების გარეშე.

# 6. ამარტივებს გუნდურ მუშაობას.
#    გუნდის წევრებს შეუძლიათ იმუშაონ სხვადასხვა ფუნქციებზე პარალელურად